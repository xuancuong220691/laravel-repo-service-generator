<?php

namespace App\Repositories\Contracts;

interface BaseRepositoryInterface
{
    public function getAll(array $relations = []);
    public function get(?array $fields = null, array $relations = []);
    public function find($id, ?array $fields = null, array $relations = []);
    public function findBy(string $key, $value, ?array $fields = null, array $relations = []);
    public function findByAttributes(array $conditions, ?array $fields = null, array $relations = []);
    public function getBy(string $key, $value, ?array $fields = null, array $relations = []);
    public function getByAttributes(array $conditions, ?array $fields = null, array $relations = []);
    public function existsBy(string $field, $value): bool;
    public function existsByAttributes(array $conditions);
    public function paginate(int $perPage = 15, array $conditions = [], ?array $fields = null, array $relations = []);
    public function create(array $data);
    public function update($id, array $data);
    public function updateFields($model, array $fields, array $except = []): mixed;
    public function createOrUpdate(array $attributes, array $values = [], array $checkFields = []): array;
    public function delete($id);
    public function deleteBy(array $conditions): int;
    public function withTrashed(array $conditions = [], ?array $fields = null, array $relations = []);
    public function onlyTrashed(array $conditions = [], ?array $fields = null, array $relations = []);
    public function restore($id): bool;
    public function forceDelete($id): bool;
}
